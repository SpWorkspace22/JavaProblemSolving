You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

Solution:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    ListNode head=null;
    ListNode tail=null;
    
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode p = list1;
        ListNode q = list2;
        
        while(p!=null && q!=null){
            if(p.val==q.val){
                addNode(p.val);
                addNode(q.val);
                
                p=p.next;
                q=q.next;
            }else if(p.val<q.val){
                addNode(p.val);
                p=p.next;
            }else if(p.val>q.val){
                addNode(q.val);
                q = q.next;
            }
        }
        
        while(p!=null){
            addNode(p.val);
            p=p.next;
        }
        
        while(q!=null){
            addNode(q.val);
            q=q.next;
        }
        
        return head;
    }
    
    public void addNode(int data){
        ListNode l = new ListNode(data);
        if(head==null){
            head = l;
            tail = l;
        }else{
            tail.next=l;
            tail=l;
        }
        
    }
}
