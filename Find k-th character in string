Given a decimal number m. Convert it into a binary string and apply n iterations, in each iteration 0 becomes 01, and 1 becomes 10. Find the kth (1-indexing) character in the string after nth iteration.

Example 1:

Input: m = 5, n = 2, k = 5
output: 0
Explanation: Binary represntation of m 
is "101", after one iteration binary 
reprentation will be "100110", and after 
second iteration binary repreentation 
will be "100101101001".

Solution:


class Solution {
    char kthCharacter(int m, int n, int k) {
        // code here
        String s = Integer.toBinaryString(m);
        
        int i=0;
        while(i<n){
            String temp = "";
            int j=0;
            while(j<s.length()){
                if(s.charAt(j)=='0'){
                    temp+="01";
                }else if(s.charAt(j)=='1'){
                    temp+="10";
                }else{
                    temp+=String.valueOf(s.charAt(j));
                }
                j++;
            }
            s = temp;
            i++;    
        }
        
        return s.charAt(k-1);
    }
    
    
