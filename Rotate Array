Given an array, rotate the array to the right by k steps, where k is non-negative.

 Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]


Solution:

class Solution {
    public void rotate(int[] nums, int k) {
        int[] temp = new int[nums.length];
        int p=0;
        if(nums.length==1){
            return;
        }
        
        k = k%nums.length;
        for(int i=nums.length-k;i<nums.length;i++){
            temp[p]=nums[i];
            p++;
        }
        
        
        for(int i=0;i<nums.length-k;i++){
            temp[p]=nums[i];
            p++;
        }
        
        for(int i=0;i<nums.length;i++){
            System.out.print(temp[i]);
        }
        
        for(int i=0;i<nums.length;i++){
            nums[i]=temp[i];
        }
    }
}
