Given an expression string x. Examine whether the pairs and the orders of “{“,”}”,”(“,”)”,”[“,”]” are correct in exp.
For example, the function should return 'true' for exp = “[()]{}{[()()]()}” and 'false' for exp = “[(])”.

Solution:

class Solution
{
    //Function to check if brackets are balanced or not.
    static boolean ispar(String s)
    {
        // add your code here
        // Your code here
        int n=s.length();
        Stack<Character> st=new Stack<>();
        for(int i=0;i<n;i++){
            
            if( ( s.charAt(i)=='{' || s.charAt(i)=='[' || s.charAt(i)=='(' ) ){
                
                st.push(s.charAt(i));
            }
            else{
                
                if(st.isEmpty()){
                    return false;
                }
                
              else if(!isMatchSymbol(st.peek(),s.charAt(i))){
                   return false;
               } 
               else{
                   
                   st.pop();
               }
                
                
            }
            
        }
        
        return st.isEmpty();
    }
    
    static boolean isMatchSymbol(char c1 ,char c2){
          
          return (
               (c1=='{' &&  c2=='}')||
               (c1=='[' &&  c2==']')||
               (c1=='(' &&  c2==')')
              );
      }
}
