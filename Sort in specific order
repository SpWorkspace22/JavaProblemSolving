Q) Given an array A of positive integers. Your task is to sort them in such a way that the first part of the array contains odd numbers sorted in descending order, rest portion contains even numbers sorted in ascending order.

 

Example 1:

Input:
N = 7
Arr = {1, 2, 3, 5, 4, 7, 10}
Output:
7 5 3 1 2 4 10
Explanation:
Array elements 7 5 3 1 are odd
and sorted in descending order,
whereas 2 4 10 are even numbers
and sorted in ascending order.


Solution:


class Solution
{
    
    public void sortIt(long arr[], long n)
    {
        //code here.
       Arrays.sort(arr);
       ArrayList<Long> odd=new ArrayList<Long>();
       ArrayList<Long> even=new ArrayList<Long>();
       for(int i=arr.length-1; i>=0; i--){
           if(arr[i]%2==0){
               even.add(arr[i]);
           }else{
               odd.add(arr[i]);
           }
       }
       for(int i=0; i<odd.size(); i++){
           arr[i]=odd.get(i);
       }
       int index=1;
       for(int i=odd.size(); i<arr.length; i++){
           arr[i]=even.get(even.size()-index);
           index++;
       }
   }
}
