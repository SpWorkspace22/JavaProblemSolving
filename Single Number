Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.

 

Example 1:

Input: nums = [2,2,1]
Output: 1

Solution:

class Solution {
    public int singleNumber(int[] nums) {
      HashSet<Integer> hs = new HashSet<Integer>();
    
        for(int i=0;i<nums.length;i++){
            if(!hs.add(nums[i])){
                hs.remove(nums[i]);
            }
        }
        
        Iterator<Integer> it = hs.iterator();
        
        return it.next();
    }
}
