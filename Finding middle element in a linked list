Given a singly linked list of N nodes.
The task is to find the middle of the linked list. For example, if the linked list is
1-> 2->3->4->5, then the middle node of the list is 3.
If there are two middle nodes(in case, when N is even), print the second middle element.
For example, if the linked list given is 1->2->3->4->5->6, then the middle node of the list is 4.


Solution:

class Solution
{
    int getMiddle(Node head)
    {
         // Your code here.
        int len=0;
        
        if(head.next==null){
            return head.data;
        }
        
        Node p = head;
        while(p!=null){
            ++len;
            p = p.next;
        }
        
        p = head;
        for(int i=0;i<len/2;i++){
            p=p.next;
        }
        return p.data;
         
    }
}
