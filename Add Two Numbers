You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [7,0,8]
Explanation: 342 + 465 = 807.
Example 2:

Input: l1 = [0], l2 = [0]
Output: [0]
Example 3:

Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
Output: [8,9,9,9,0,0,0,1]

Solution:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    ListNode head=null;
    ListNode tail=null;
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode p = l1;
        ListNode q = l2;
        
        int carry = 0;
        while(p!=null && q!=null){
            int sum=p.val+q.val;
            if(carry!=0){
                sum+=carry;
            }
            
            if(sum>=10){
                carry = sum/10;
                addNode(sum%10);
            }else{
                carry=0;
                addNode(sum);
            }
            
            p=p.next;
            q=q.next;
        }
        
        while(p!=null){
            int sum=p.val;
            if(carry!=0){
                sum+=carry;
            }
            
            if(sum>=10){
                carry = sum/10;
                addNode(sum%10);
            }else{
                carry=0;
                addNode(sum);
            }
            p=p.next;
        }
        
        while(q!=null){
            int sum=q.val;
            if(carry!=0){
                sum+=carry;
            }
            
            if(sum>=10){
                carry = sum/10;
                addNode(sum%10);
            }else{
                carry=0;
                addNode(sum);
            }
            
            q=q.next;
        }
        
        if(carry!=0){
            addNode(carry);
        }
        return head;
    }
    
    public void addNode(int n){
        ListNode l = new ListNode(n,null);
        if(head==null){
            head=l;
            tail=l;
        }else{
            tail.next=l;
            tail=l;
        }
    }
    
}
